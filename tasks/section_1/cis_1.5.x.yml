---
- name: "1.5.1 | Ensure address space layout randomization (ASLR) is enabled | Set active kernel parameter"
  ansible.posix.sysctl:
    name: kernel.randomize_va_space
    value: "2"
    state: present
    sysctl_file: "{{ cis_sysctl_kernel_conf }}"
    reload: true
    sysctl_set: true
    ignoreerrors: true
  tags:
    - level1-server
    - level1-workstation
    - automated
    - patch
    - 1.5.1
    - aslr

- name: "1.5.2 | Ensure ptrace_scope is restricted"
  block:
    - name: 1.5.2 | Ensure ptrace_scope is restricted | Ensure the kernel.yama.ptrace_scope line is present in /etc/sysctl.conf
      lineinfile:
        path: /etc/sysctl.conf
        regexp: "^kernel.yama.ptrace_scope"
        line: "kernel.yama.ptrace_scope = 1"
        state: present

    - name: 1.5.2 | Ensure ptrace_scope is restricted | Reload sysctl
      command: sysctl -p
  tags:
    - level1-server
    - level1-workstation
    - automated
    - patch
    - 1.5.2

- name: "1.5.3 | Ensure core dumps are restricted"
  block:
    - name: "1.5.3 | Ensure core dumps are restricted | kernel sysctl"
      ansible.posix.sysctl:
        name: fs.suid_dumpable
        value: "0"
        state: present
        sysctl_file: "{{ cis_sysctl_kernel_conf }}"
        reload: true
        sysctl_set: true
        ignoreerrors: true

    - name: "1.5.3 | Ensure core dumps are restricted | security limits"
      lineinfile:
        path: /etc/security/limits.d/99_zero_core.conf
        regexp: '^\* hard core'
        line: "* hard core 0"
        create: true
        owner: root
        group: root
        mode: "0644"

    - name: "1.5.3 | Ensure core dumps are restricted | sysctl.conf"
      lineinfile:
        path: /etc/sysctl.conf
        regexp: "^fs.suid_dumpable"
        line: fs.suid_dumpable=0
        owner: root
        group: root
        mode: "0644"
      notify: Reload systemctl

    - name: "1.5.3 | Ensure core dumps are restricted | coredump.conf"
      lineinfile:
        path: /etc/systemd/coredump.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        create: true
        owner: root
        group: root
        mode: "0644"
      loop:
        - { regexp: "^Storage", line: "Storage=none" }
        - { regexp: "^ProcessSizeMax", line: "ProcessSizeMax=0" }
      when: "'systemd-coredump' in ansible_facts.packages"
  tags:
    - level1-server
    - level1-workstation
    - automated
    - patch
    - 1.5.3
    - coredump

- name: "1.5.4 | Ensure prelink is not installed"
  block:
    - name: "1.5.4 | Ensure prelink is not installed | Restore binaries to normal"
      shell: prelink -ua
      changed_when: false
      failed_when: false

    - name: "1.5.4 | Ensure prelink is not installed | Remove prelink package"
      package:
        name: prelink
        state: absent
        purge: "{{ cis_purge_apt_prelink }}"
  when:
    - "'prelink' in ansible_facts.packages"
  tags:
    - level1-server
    - level1-workstation
    - automated
    - patch
    - 1.5.4
    - prelink

- name: "1.5.5 | Ensure Automatic Error Reporting is not enabled"
  block:
    - name: "1.5.5 | Ensure Automatic Error Reporting is not enabled | disable"
      lineinfile:
        path: /etc/default/apport
        regexp: ^enabled
        line: enabled=0
        create: true
        owner: root
        group: root
        mode: "0644"

    - name: "1.5.5 | Ensure Automatic Error Reporting is not enabled | remove package"
      package:
        name: apport
        state: absent
        purge: "{{ cis_purge_apt_apport }}"
      when:
        - "'apport' in ansible_facts.packages"
  tags:
    - level1-server
    - level1-workstation
    - automated
    - patch
    - 1.5.5
    - apport
