---
## Reboot system before audit
# System will reboot if false, can give better audit results
skip_reboot: true

# Set default value for reboot value
change_requires_reboot: false

## Benchmark name and profiles used by auditing control role
# The audit variable found at the base
benchmark: CIS-Ubuntu-22.04-Ansible
benchmark_version: v2.0.0
min_ansible_version: 2.12.1

# Used to control warning summary
warn_control_list: ""
warn_count: 0

## Possibly disruptive tasks
# This variable governs whether tasks of a potentially disruptive nature on your system
# (e.g., removing .forward and .netrc files for interactive users) are carried out.
# If you set this variable to "true", the role will carry such tasks; if you set it to
# "false", these tasks will be skipped.
cis_disruption_high: true

## Unrestricted boot
# Setting this variable to false enables the system to
# boot *without* querying for the bootloader password.
cis_ask_passwd_to_boot: false

## Root user used
# Root by default is not used unless setup by user
# The role will only run certain commands if set to true
# This allows the ability to skip tasks that may cause an issue
cis_uses_root: false

## Running in EC2 pipeline
# Skip events for EC2 instance testing pipeline.
# This variable is set to true for automated tests
# carried out for this role by the role maintainers.
system_is_ec2: false

##
## Service configuration variables.
##
## Set the respective variable to true to keep the service.
## otherwise the service is stopped and disabled
##

cis_allow_usb_storage: false
cis_avahi_server: false
cis_cups_server: false
cis_dhcp_server: false
cis_ldap_server: false
cis_nfs_server: false
cis_dns_server: false
cis_vsftpd_server: false
cis_httpd_server: false
cis_dovecot_server: false
cis_smb_server: false
cis_squid_server: false
cis_snmp_server: false
cis_rsync_server: false
cis_nis_server: false
cis_nfs_client: false

# rpcbind is required by nfs-common which is required on client and server
# The value of the variable is determined automatically, based on the variables
# for NFS server and NFS client.
cis_rpc_required: "{{ cis_nfs_server or cis_nfs_client }}"

##
## Client package configuration variables.
##
## Set the respective variable to `true` to keep the
## client package, otherwise it is uninstalled.
##

cis_nis_required: false
cis_rsh_required: false
cis_talk_required: false
cis_telnet_required: false
cis_ldap_clients_required: false

##
## System functionality configuration variables
##
## There are certain functionalities of a system
## that may require either to skip certain CIS rules
## or install certain packages.
## Set the respective variable to `true` in order to
## enable a certain functionality on the system

# This variable governs whether specific CIS rules
# concerned with acceptance and routing of packages
# are skipped.
cis_is_router: false

## IPv4 requirement toggle
# This variable governs whether ipv4 is enabled or disabled.
cis_ipv4_required: true

## IPv6 requirement toggle
# This variable governs whether ipv6 is enabled or disabled.
cis_ipv6_required: false

## Desktop requirement toggle
# This variable governs, whether CIS rules regarding GDM
# and X-Windows are carried out.
cis_desktop_required: false

## Purge apt packages
# This will allow the purging of packages that are marked to be removed
# 1.5.x
cis_purge_apt_prelink: false
cis_purge_apt_apport: false
# 2.1.x
cis_purge_apt_autofs: false
cis_purge_apt_avahi: false
cis_purge_apt_dhcp: false
cis_purge_apt_bind9: false
cis_purge_apt_dnsmasq: false
cis_purge_apt_vsftpd: false
cis_purge_apt_sldap: false
cis_purge_apt_imapd: false
cis_purge_apt_pop3d: false
cis_purge_apt_nfs: false
cis_purge_apt_ypserv: false
cis_purge_apt_cups: false
cis_purge_apt_rpcbind: false
cis_purge_apt_rsync: false
cis_purge_apt_samba: false
cis_purge_apt_snmpd: false
cis_purge_apt_tftpd: false
cis_purge_apt_squid: false
cis_purge_apt_apache2: false
cis_purge_apt_nginx: false
cis_purge_apt_xinetd: false
cis_purge_apt_xserver: false
# 2.2.x
cis_purge_apt_nis: false
cis_purge_apt_rsh: false
cis_purge_apt_talk: false
cis_purge_apt_telnet: false
cis_purge_apt_ldap: false
cis_purge_apt_ftp: false
# 3.1.3
cis_purge_apt_bluez: false
# 4.3.x
cis_purge_apt_nftables: false
cis_purge_apt_ufw: false

##
## Section 1 Control Variables
##

## tmp mount type
# This variable determines, to which mount type
# the tmp mount type will be set, if it cannot be
# correctly discovered. will force the tmp_mnt type
# if not correctly discovered.
# Possible values are `tmp_systemd` or `fstab`-
expected_tmp_mnt: fstab

## 1.2.2.1 | Ensure updates, patches, and additional security software are installed
cis_upgrade_dist: true

## Controls 1.4.1 - Boot password
#
# THIS VARIABLE SHOULD BE CHANGED AND INCORPORATED INTO VAULT
# THIS VALUE IS WHAT THE ROOT PW WILL BECOME!!!!!!!!
# HAVING THAT PW EXPOSED IN RAW TEXT IS NOT SECURE!!!!
cis_grub_user: root
cis_set_grub_user_pass: false
cis_grub_user_passwd: "$y$j9T$MBA5l/tQyWifM869nQjsi.$cTy0ConcNjIYOn6Cppo5NAky20osrkRxz4fEWA8xac6" # Set to changeme
cis_grub_user_file: /etc/grub.d/00_user
cis_bootloader_password_hash: "grub.pbkdf2.sha512.changethispassword" # pragma: allowlist secret
cis_set_boot_pass: false
cis_grub_file: /boot/grub/grub.cfg

## Controls 1.5.x
# Ability to set file in which the kernel systcl changes are placed
cis_sysctl_kernel_conf: /etc/sysctl.d/98_cis_kernel.conf

## Controls 1.3.x - apparmor
# AppArmor security policies define what system resources applications can access and their privileges.
# This automatically limits the damage that the software can do to files accessible by the calling user.
# The following variables are related to the set of rules from section 1.3.x

# This variable disables the implementation of rules 1.3.1.3 and 1.3.1.4
# regarding enforcing profiles or putting them in complain mode
cis_apparmor_disable: false

# This variable specifies whether enforce mode or complain  mode is set in Control 1.3.1.3.
# Possible values are `enforce` and `complain`.
# ATTENTION: if Control 1.3.1.4 is run (e.g., when running level 2 rules), it OVERRIDES control 1.3.1.3
# and sets `enforce` mode, no matter what this variable's value is.
cis_apparmor_mode: complain

## Controls 1.7.x - Warning banners
# The controls 1.7.x set various warning banners and protect the respective files
# by tightening the access rights.

# This variable specifies the warning banner displayed to the user
# after local login, remote login, and as motd (message of the day)
# Noe that the banner text must not contain the below items in order to be
# compliant with CIS: \m, \r, \s, \v or references to the OS platform
cis_warning_banner: |
  Authorized uses only. All activity may be monitored and reported.

# Controls 1.6.x - This variable governs whether dynamic motd is disabled (as required by control 1.7.1)
cis_disable_dynamic_motd: true

## Controls 1.7.x - Settings for GDM
# This variable specifies the GNOME configuration database file to which configurations are written.
# (See https://help.gnome.org/admin/system-admin-guide/stable/dconf-keyfiles.html.en)
# The default database is `local`.
cis_dconf_db_name: local
# This variable governs the number of seconds of inactivity before the screen goes blank.
cis_screensaver_idle_delay: 900
# This variable governs the number of seconds the screen remains blank before it is locked.
cis_screensaver_lock_delay: 5

##
## Section 2 Control Variables
##

remove_NFS: true

## Control 2.3.1.1
# This variable choses the tool used for time synchronization
# The three options are `chrony`, `ntp`, and `systemd-timesyncd`.
cis_time_sync_tool: "ntp"

## Controls 2.3.3.1, 2.3.2.1, 2.3.3.1 - Configure time pools & servers for chrony, timesyncd, and ntp
# The following variable represents a list of of time server pools used
# for configuring chrony, timesyncd, and ntp.
# Each list item contains two settings, `name` (the domain name of the pool) and synchronization `options`.
# The default setting for the `options` is `iburst maxsources 4` -- please refer to the documentation
# of the time synchronization mechanism you are using.
cis_time_pool:
  - name: time.nist.gov
    options: iburst maxsources 4
# The following variable represents a list of of time servers used
# for configuring chrony, timesyncd, and ntp.
# Each list item contains two settings, `name` (the domain name of the server) and synchronization `options`.
# The default setting for the `options` is `iburst` -- please refer to the documentation
# of the time synchronization mechanism you are using.
cis_time_servers:
  - name: time-a-g.nist.gov
    options: iburst
  - name: time-b-g.nist.gov
    options: iburst
  - name: time-c-g.nist.gov
    options: iburst

##
## Section 3 Control Variables
##

## Control 3.1.x, 3.3.x - Ensure system is checked to determine if IPv6 is enabled
# This variable governs the mechanism of how the disabling of IPV6 is carried out.
# Its possible values are `grub` and `sysctl`.
cis_ipv6_disable: grub

## Control 3.3.x - Networking configuration
# This variable contains the path to the file in which, sysctl saves its configurations.
# Its default value is `/etc/sysctl.conf`.
cis_sysctl_network_conf: /etc/sysctl.conf

##
## Section 4 Control Variables
##

## Controls 4.1.x, 4.2.x, 4.3.x - Firewall configuration
# This variable represents the toggle for which firewall package is used.
# The options that have an effect on the system are `ufw` and `iptables`.
# The option `nftables` is also possible, but will only result in a message,
# that `nftables` has been chosen; all settings have to be carried out manually.
# Any other value, e.g. `none` will skip all firewall-related controls.
cis_firewall_package: "ufw"
cis_save_iptables_cis_rules: false
# This variable is used in a preliminary task that forces the UFW firewall to use /etc/sysctl.conf
# settings. If set to "true" the task will get done in the prelim section of the role.
cis_ufw_use_sysctl: true
## Control 4.1.x - Ensure ufw outbound connections are configured
firewall_list_of_ports_to_allow:
  # SSHD
  - { rule: "allow", port: "22", proto: "tcp" }
firewall_allow_keep_alive: true

## Controls 4.2.x - nftables
# Nftables is not supported in this role. Some tasks have parts of them commented out, this is one example
# of such a task.
# "cis_nftables_table_name" is the name of the table in nftables you want to create.
# The default nftables table name is "inet filter". This variable name will be the one all
# nftables configs are applied to.
# cis_nftables_table_name: "inet filter"

##
## Section 5 Control Variables
##

## 5.1.x -- various sshd settings
cis_ssh_root_login_ips: None
cis_sshd_default_log_level: "INFO"
cis_sshd_default_ciphers:
  - aes256-gcm@openssh.com
  - aes128-gcm@openssh.com
  - aes256-ctr
  - aes192-ctr
  - aes128-ctr
cis_sshd_default_macs:
  - hmac-sha2-512
  - hmac-sha2-256
cis_sshd_default_kex_algorithms:
  - diffie-hellman-group14-sha256
  - diffie-hellman-group16-sha512
  - diffie-hellman-group18-sha512
  - ecdh-sha2-nistp521
  - ecdh-sha2-nistp384
  - ecdh-sha2-nistp256
  - diffie-hellman-group-exchange-sha256
cis_sshd_default_max_auth_tries: 4
cis_sshd_default_max_sessions: 8
cis_sshd_default_login_grace_time: 60
cis_sshd_default_client_alive_interval: 300
cis_sshd_default_client_alive_count_max: 3
cis_sshd_max_startups: "10:30:60"
cis_sshd:
  # This variable is used to control the verbosity of the logging produced by the SSH server.
  # The options for setting it are as follows:
  # - `QUIET`: Minimal logging;
  # - `FATAL`: logs only fatal errors;
  # - `ERROR`: logs error messages;
  # - `INFO`: logs informational messages in addition to errors;
  # - `VERBOSE`: logs a higher level of detail, including login attempts and key exchanges;
  # - `DEBUG`: generates very detailed debugging information including sensitive information.
  log_level: "{{cis_sshd_default_log_level}}"
  # This variable specifies the maximum number of authentication attempts that are
  # allowed for a single SSH session.
  max_auth_tries: "{{cis_sshd_default_max_auth_tries}}"
  # This variable specifies the encryption algorithms that can be used for securing
  # data transmission.
  ciphers: "{{cis_sshd_default_ciphers}}"
  # This variable specifies a list of message authentication code algorithms (MACs) that are allowed for verifying
  # the integrity of data exchanged.
  macs: "{{cis_sshd_default_macs}}"
  # This variable is used to state the key exchange algorithms used to establish secure encryption
  # keys during the initial connection setup.
  kex_algorithms: "{{cis_sshd_default_kex_algorithms}}"
  # This variable sets the time interval in seconds between sending "keep-alive"
  # messages from the server to the client. These types of messages are intended to
  # keep the connection alive and prevent it being terminated due to inactivity.
  client_alive_interval: "{{cis_sshd_default_client_alive_interval}}"
  # This variable sets the maximum number of unresponsive "keep-alive" messages
  # that can be sent from the server to the client before the connection is considered
  # inactive and thus, closed.
  client_alive_count_max: "{{cis_sshd_default_client_alive_count_max}}"
  # This variable specifies the amount of seconds allowed for successful authentication to
  # the SSH server.
  login_grace_time: "{{cis_sshd_default_login_grace_time}}"
  # This variables is used to set the maximum number of open sessions per connection.
  max_sessions: "{{cis_sshd_default_max_sessions}}"
  # This variable, if specified, configures a list of USER name patterns, separated by spaces, to allow SSH
  # access for users whose user name matches one of the patterns. This is done
  # by setting the value of `AllowUsers` option in `/etc/ssh/sshd_config` file.
  # If an USER@HOST format will be used, the specified user will be allowed only on that particular host.
  # The allow/deny directives process order: DenyUsers, AllowUsers, DenyGroups, AllowGroups.
  # For more info, see https://linux.die.net/man/5/sshd_config
  allow_users: ""
  # (String) This variable, if specified, configures a list of GROUP name patterns, separated by spaces, to allow SSH access
  # for users whose primary group or supplementary group list matches one of the patterns. This is done
  # by setting the value of `AllowGroups` option in `/etc/ssh/sshd_config` file.
  # The allow/deny directives process order: DenyUsers, AllowUsers, DenyGroups, AllowGroups.
  # For more info, https://linux.die.net/man/5/sshd_config
  allow_groups: ""
  # This variable, if specified, configures a list of USER name patterns, separated by spaces, to prevent SSH access
  # for users whose user name matches one of the patterns. This is done
  # by setting the value of `DenyUsers` option in `/etc/ssh/sshd_config` file.
  # If an USER@HOST format will be used, the specified user will be restricted only on that particular host.
  # The allow/deny directives process order: DenyUsers, AllowUsers, DenyGroups, AllowGroups.
  # For more info, see https://linux.die.net/man/5/sshd_config
  deny_users: ""
  # This variable, if specified, configures a list of GROUP name patterns, separated by spaces, to prevent SSH access
  # for users whose primary group or supplementary group list matches one of the patterns. This is done
  # by setting the value of `DenyGroups` option in `/etc/ssh/sshd_config` file.
  # The allow/deny directives process order: DenyUsers, AllowUsers, DenyGroups, AllowGroups.
  # For more info, see https://linux.die.net/man/5/sshd_config
  deny_groups: ""

## 5.2.x
# This variable represents the name of the sudo package to install
# CIS recommends `sudo` or, if LDAP functionality is required, `sudo-ldap`.
cis_sudo_package: "sudo"
# This variable defines the path and file name of the sudo log file.
cis_sudo_logfile: "/var/log/sudo.log"
# This variable sets the duration (in minutes) during which a user's authentication credentials
# are cached after successfully authenticating using "sudo". This allows the user to execute
# multiple commands with elevated privileges without needing to re-enter their password for each
# command within the specified time period. CIS requires a value of at most 15 minutes.
cis_sudo_timestamp_timeout: 15
# This variable determines the group of users that are allowed to use the su command.
# one to specify a user group that is allowed to use the "su" command.
# CIS requires that such a group be created (named according to site policy) and be kept empty.
cis_sugroup: nosugroup

## Control 5.3.x
# This variable allows us to use either
#
cis_pwquality_minlen: "14"
cis_pwquality:
  - key: "minclass"
    value: "4"
  - key: "dcredit"
    value: "-1"
  - key: "ucredit"
    value: "-1"
  - key: "ocredit"
    value: "-1"
  - key: "lcredit"
    value: "-1"
cis_pwquality_maxrepeat: "3"
cis_pwquality_maxsequence: "3"
cis_pwquality_dictcheck: "1"
cis_pwquality_enforcing: "1"

# This variable represents the number of password change cycles, after which
# a user can re-use a password.
# CIS requires a value of 24 or more.
cis_pamd_pwhistory_remember: 24

# This can seriously break access to a system
## The end state the file /etc/pam.d/common-auth need to be understood
## If using external auth providers this will be very different
cis_allow_common_auth_rewrite: false
cis_faillock_config: |
  auth       required pam_faillock.so preauth
  auth       [success=1 default=ignore] pam_unix.so nullok
  auth       [default=die] pam_faillock.so authfail
  auth       sufficient pam_faillock.so authsucc

## 5.4.2.6
cis_root_umask: "0027"

## Control 5.3.3.4.3 , 5.4.1.4
# cis_passwd_hash_algo is the hashing algorithm used
cis_passwd_hash_algo: yescrypt # pragma: allowlist secret
# Set pam as well as login defs if PAM is required
cis_passwd_setpam_hash_algo: false

## Controls 5.4.x - Password settings
cis_pass:
  # This variable governs after how many days a password expires.
  # CIS requires a value of 365 or less.
  max_days: 365
  # This variable specifies the minimum number of days allowed between changing passwords.
  # CIS requires a value of at least 1.
  min_days: 1
  # This variable governs, how many days before a password expires, the user will be warned.
  # CIS requires a value of at least 7.
  warn_age: 7
  # This variable specifies the number of days of inactivity before an account will be locked.
  # CIS requires a value of 30 days or less.
  inactive: 30
# The changes above are set configure via two methods: /etc/login.defs and the chage command.
# For the latter scenario, you need to specify the list OS users in the following variable:
chage_list_of_users: ["ubuntu"]

## Control 5.4.3.3 - Default user mask
# The following variable specifies the "umask" to set in the `/etc/bash.bashrc` and `/etc/profile`.
# The value needs to be `027` or more restrictive to comply with CIS standards
cis_bash_umask: "027"

## Control 5.4.3.2 - Configuring user shell timeout
# This dictionary is related to ensuring the rule about user shell timeout
cis_shell_session_timeout:
  # This variable specifies the path of the timeout setting file.
  # (TMOUT setting can be set in multiple files, but only one is required for the
  # rule to pass. Options are:
  # - a file in `/etc/profile.d/` ending in `.s`,
  # - `/etc/profile`, or
  # - `/etc/bash.bashrc`.
  file: /etc/profile.d/tmout.sh
  # This variable represents the amount of seconds a command or process is allowed to
  # run before being forcefully terminated.
  # CIS requires a value of at most 900 seconds.
  timeout: 900

##
## Section 6 Control Variables
##

## Control 6.1 - allow aide to be configured
# AIDE is a file integrity checking tool, similar in nature to Tripwire.
# While it cannot prevent intrusions, it can detect unauthorized changes
# to configuration files by alerting when the files are changed. Review
# the AIDE quick start guide and AIDE documentation before proceeding.
# By setting this variable to `true`, all of the settings related to AIDE will be applied!
cis_config_aide: true

## Control 6.1.2
# These are the crontab settings for periodical checking of the filesystem's integrity using AIDE.
# The sub-settings of this variable provide the parameters required to configure
# the cron job on the target system.
# Cron is a time-based job scheduling program in Unix OS, which allows tasks to be scheduled
# and executed automatically at a certain point in time.
cis_aide_cron:
  # This variable represents the user account under which the cron job for AIDE will run.
  cron_user: root
  # This variable represents the path to the AIDE crontab file.
  cron_file: /etc/cron.d/aide_cron
  # This variable represents the actual command or script that the cron job
  # will execute for running AIDE.
  aide_job: "/usr/bin/aide --config /etc/aide/aide.conf --check"
  # These variables define the schedule for the cron job
  # This variable governs the minute of the time of day when the AIDE cronjob is run.
  # It must be in the range `0-59`.
  aide_minute: 0
  # This variable governs the hour of the time of day when the AIDE cronjob is run.
  # It must be in the range `0-23`.
  aide_hour: 5
  # This variable governs the day of the month when the AIDE cronjob is run.
  # `*` signifies that the job is run on all days; furthermore, specific days
  # can be given in the range `1-31`; several days can be concatenated with a comma.
  # The specified day(s) can must be in the range  `1-31`.
  aide_day: "*"
  # This variable governs months when the AIDE cronjob is run.
  # `*` signifies that the job is run in every month; furthermore, specific months
  # can be given in the range `1-12`; several months can be concatenated with commas.
  # The specified month(s) can must be in the range  `1-12`.
  aide_month: "*"
  # This variable governs the weekdays, when the AIDE cronjob is run.
  # `*` signifies that the job is run on all weekdays; furthermore, specific weekdays
  # can be given in the range `0-7` (both `0` and `7` represent Sunday); several weekdays
  # can be concatenated with commas.
  aide_weekday: "*"

## 6.2.1.2.2
# This variable specifies the address of the remote log host where logs are being sent.
cis_remote_log_server: 192.168.2.100
# This variable expresses whether the system is used as a log server or not.
# If set to `true`, controls that interfere with log server functionality or
# require that own system logs be sent to some other log server are skipped.
cis_system_is_log_server: false
# This variable specifies the path to the private key file used by the remote journal
# server to authenticate itself to the client. This key is used alongside the server's
# public certificate to establish secure communication.
cis_journal_upload_serverkeyfile:
# This variable specifies the path to the public certificate file of the remote journal
# server. This certificate is used to verify the authenticity of the remote server.
cis_journal_servercertificatefile:
# This variable specifies the path to a file containing one or more public certificates
# of certificate authorities (CAs) that the client trusts. These trusted certificates are used
# to validate the authenticity of the remote server's certificate.
cis_journal_trustedcertificatefile:
## 6.2.1.1.3
# These variable specifies how much disk space the journal may use up at most
# Specify values in bytes or use K, M, G, T, P, E as units for the specified sizes.
# See https://www.freedesktop.org/software/systemd/man/journald.conf.html for more information.
# ATTENTION: Uncomment the keyword below when values are set!
cis_journald_systemmaxuse: "#SystemMaxUse="
cis_journald_systemkeepfree: "#SystemKeepFree="
cis_journald_runtimemaxuse: "#RuntimeMaxUse="
cis_journald_runtimekeepfree: "#RuntimeKeepFree="
# This variable specifies, the maximum time to store entries in a single journal
# file before rotating to the next one. Set to 0 to turn off this feature.
# The given values is interpreted as seconds, unless suffixed with the units
# `year`, `month`, `week`, `day`, `h` or `m` to override the default time unit of seconds.
# ATTENTION: Uncomment the keyword below when values are set!
cis_journald_maxfilesec: "#MaxFileSec="

##  Control 6.3.1.4 - Ensure audit_backlog_limit is sufficient
# This variable represents the audit backlog limit, i.e., the maximum number of audit records that the
# system can buffer in memory, if the audit subsystem is unable to process them in real-time.
# Buffering in memory is useful in situations, where the audit system is overwhelmed
# with incoming audit events, and needs to temporarily store them until they can be processed.
# This variable should be set to a sufficient value. The CIS baseline recommends at least `8192` as value.
cis_audit_back_log_limit: 8192

## Control 6.3.2.1 - Ensure audit log storage size is configured
# This variable specifies the maximum size in MB that an audit log file can reach
# before it is archived or deleted to make space for the new audit data.
# This should be set based on your sites policy. CIS does not provide a specific value.
cis_max_log_file_size: 10

cis_auditd:
  ## 6.3.2.3 Ensure system is disabled when audit logs are full
  disk_full_action: halt # halt|single
  disk_error_action: halt # syslog|single|halt

  ## 6.3.2.4 Ensure system warns when audit logs are low on space
  action_mail_acct: root
  space_left_action: email
  # This variable determines the action the audit system should take when disk
  # space runs low.
  # The options for setting this variable are as follows:
  # - `ignore`: the system does nothing when presented with the aforementioned issue;
  # - `syslog`: a message is sent to the system log about disk space running low;
  # - `suspend`: the system suspends recording audit events until more space is available;
  # - `halt`: the system is halted when disk space is critically low.
  # - `single`: the audit daemon will put the computer system in single user mode
  # CIS prescribes either `halt` or `single`.
  admin_space_left_action: single
  # This variable determines what action the audit system should take when the maximum
  # size of a log file is reached.
  # The options for setting this variable are as follows:
  # - `ignore`: the system does nothing when the size of a log file is full;
  # - `syslog`: a message is sent to the system log indicating the problem;
  # - `suspend`: the system suspends recording audit events until the log file is cleared or rotated;
  # - `rotate`: the log file is rotated (archived) and a new empty log file is created;
  # - `keep_logs`: the system attempts to keep as many logs as possible without violating disk space constraints.
  # CIS prescribes the value `keep_logs`.
  max_log_file_action: keep_logs

##
## Section 7 Control Variables
##

## Controls 7.2.x
# The minimum and maximum UIDs to be used when enforcing  and checking control 7.2.9 can either
# be can either be discovered automatically via logins.def or set manually in this file
# If min/maxx UIDs are to be discovered automatically during the prelim tasks, set this variable
# to `true`, otherwise to `false`.
discover_int_uid: false
# This 6variable sets the minimum number from which to search for UID
# Note that the value will be dynamically overwritten if variable `dicover_int_uid` has
# been set to `true`.
min_int_uid: 1000

# This variable sets the maximum number at which the search stops for UID
# Note that the value will be dynamically overwritten if variable `dicover_int_uid` has
# been set to `true`.
max_int_uid: 65533

## Control 7.1.11
# The following variable is a toggle for enabling/disabling the automated
# removal of world-writable permissions from all files.
# Possible values are `true` and `false`.
cis_no_world_write_adjust: true

# Control 7.1.12
# The value of this variable specifies the owner that will be set for unowned files and directories.
cis_unowned_owner: root
# This variable is a toggle for enabling/disabling the automated
# setting of an owner (specified in variable `cis_unowned_owner`)
# for all unowned files and directories.
# Possible values are `true` and `false`.
cis_no_owner_adjust: true
cis_ungrouped_items_whitelist: []
# This variable represents the group that will be set for files without group.
cis_ungrouped_group: root
# This variable is a toggle for enabling/disabling the automated
# assignment of a group (specified in variable `cis_unowned_group`)
# for all group-less files and directories.
# Possible values are `true` and `false`.
cis_no_group_adjust: true
cis_unowned_items_whitelist: []

## Control 7.1.13
# This variable is a toggle for enabling/disabling the automated removal
# of the SUID bit from all files on all mounts.
# Possible values are `true` and `false`.
cis_suid_adjust: false
cis_suid_whitelist: []
# This variable is a toggle for enabling/disabling the automated removal the SGID
# bit from all files on all mounts
# Possible values are `true` and `false`.
cis_sgid_adjust: false
cis_sgid_whitelist: []

## Control 7.2.10
# This variable is a toggle foe enabling/disabling the automated modification of
# permissions on dot files.
# Possible values are `true` and `false`.
cis_dotperm_ansiblemanaged: true
